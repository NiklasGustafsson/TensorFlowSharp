<Type Name="TFTensor" FullName="TensorFlow.TFTensor">
  <TypeSignature Language="C#" Value="public class TFTensor : TensorFlow.TFDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TFTensor extends TensorFlow.TFDisposable" />
  <AssemblyInfo>
    <AssemblyName>TensorFlowSharp</AssemblyName>
    <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>TensorFlow.TFDisposable</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
             TFTensor holds a multi-dimensional array of elements of a single data type.
             </summary>
    <remarks>
             You can create tensors with the various constructors in this class, or using
             the implicit conversions from various data types into a TFTensor.
            
             The implicit conversions for basic types produce tensors of one dimesion with
             a single element, while the implicit conversion from an array, expects a multi-dimensional
             array that is converted into a tensor of the right dimensions.
             
             The special "String" tensor data type that you will find in TensorFlow documentation
             really represents a byte array.   You can create string tensors by using the <see cref="M:TensorFlow.TFTensor.CreateString" /> 
             method that takes a byte array buffer as input.
             </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TFTensor (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8 value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
            Creates a constant tensor with a single dimension from an byte value.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TFTensor (byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] data) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TFTensor (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
            Creates a constant tensor with a single dimension from a double value.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TFTensor (double[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64[] data) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TFTensor (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int16 value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
            Creates a constant tensor with a single dimension from a short value.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TFTensor (short[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int16[] data) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TFTensor (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
            Creates a constant tensor with a single dimension from an integer value.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TFTensor (int[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32[] data) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TFTensor (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
            Creates a constant tensor with a single dimension from a long value.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TFTensor (long[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64[] data) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="System.Int64[]" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TFTensor (System.Numerics.Complex value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Numerics.Complex value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Complex" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
            Creates a constant tensor with a single dimension from a Complex value.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TFTensor (System.Numerics.Complex[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Numerics.Complex[] data) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="System.Numerics.Complex[]" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TFTensor (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int8 value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
            Creates a constant tensor with a single dimension from an sbyte value.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TFTensor (sbyte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int8[] data) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="System.SByte[]" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TFTensor (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
            Creates a constant tensor with a single dimension from a float value.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TFTensor (float[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32[] data) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TFTensor (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int16 value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
            Creates a constant tensor with a single dimension from an ushort value.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TFTensor (ushort[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int16[] data) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="System.UInt16[]" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TFTensor (TensorFlow.TFDataType dataType, long[] dims, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype TensorFlow.TFDataType dataType, int64[] dims, int32 size) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataType" Type="TensorFlow.TFDataType" />
        <Parameter Name="dims" Type="System.Int64[]" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dataType">To be added.</param>
        <param name="dims">To be added.</param>
        <param name="size">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TFTensor (TensorFlow.TFDataType dataType, long[] dims, IntPtr data, UIntPtr dataSize, TensorFlow.TFTensor.Deallocator deallocator, IntPtr deallocatorData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype TensorFlow.TFDataType dataType, int64[] dims, native int data, native unsigned int dataSize, class TensorFlow.TFTensor/Deallocator deallocator, native int deallocatorData) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataType" Type="TensorFlow.TFDataType" />
        <Parameter Name="dims" Type="System.Int64[]" />
        <Parameter Name="data" Type="System.IntPtr" />
        <Parameter Name="dataSize" Type="System.UIntPtr" />
        <Parameter Name="deallocator" Type="TensorFlow.TFTensor+Deallocator" />
        <Parameter Name="deallocatorData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dataType">To be added.</param>
        <param name="dims">To be added.</param>
        <param name="data">To be added.</param>
        <param name="dataSize">To be added.</param>
        <param name="deallocator">To be added.</param>
        <param name="deallocatorData">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateString">
      <MemberSignature Language="C#" Value="public static TensorFlow.TFTensor CreateString (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class TensorFlow.TFTensor CreateString(unsigned int8[] buffer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TensorFlow.TFTensor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>
            Creates a single-dimension tensor from a byte buffer.  This is different than creating a tensor from a byte array that produces a tensor with as many elements as the byte array.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public IntPtr Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns a pointer to the raw data in the tensor.
            </summary>
        <value>To be added.</value>
        <remarks>
            The contents of the Data must be interpreted according to the type of the
            data as described by the DataType property.   The amount of data
            is given by the the TensorByteSize property.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromBuffer">
      <MemberSignature Language="C#" Value="public static TensorFlow.TFTensor FromBuffer (TensorFlow.TFShape shape, byte[] data, int start, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class TensorFlow.TFTensor FromBuffer(class TensorFlow.TFShape shape, unsigned int8[] data, int32 start, int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TensorFlow.TFTensor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shape" Type="TensorFlow.TFShape" />
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="shape">Represents the tensor shape.</param>
        <param name="data">The linear array of data, the data is shuffled to fit in the tensor with the specified dimensions.</param>
        <param name="start">The offset into the provided data array where the data resides.</param>
        <param name="count">The number of bytes to copy from count into the tensor.</param>
        <summary>
            Creates a new tensor from a portion of an array of bytes
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Use the FromBuffer method to create a tensor that has the specified dimensions
            and is initialized with data from the data array.   The data is copied starting
            at the start offset, for count bytes and is laid out into the tensor following the
            specified dimensions.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromBuffer">
      <MemberSignature Language="C#" Value="public static TensorFlow.TFTensor FromBuffer (TensorFlow.TFShape shape, double[] data, int start, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class TensorFlow.TFTensor FromBuffer(class TensorFlow.TFShape shape, float64[] data, int32 start, int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TensorFlow.TFTensor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shape" Type="TensorFlow.TFShape" />
        <Parameter Name="data" Type="System.Double[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="shape">Represents the tensor shape.</param>
        <param name="data">The linear array of data, the data is shuffled to fit in the tensor with the specified dimensions.</param>
        <param name="start">The offset into the provided data array where the data resides.</param>
        <param name="count">The number of bytes to copy from count into the tensor.</param>
        <summary>
            Creates a new tensor from a portion of an array of doubles
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Use the FromBuffer method to create a tensor that has the specified dimensions
            and is initialized with data from the data array.   The data is copied starting
            at the start offset, for count bytes and is laid out into the tensor following the
            specified dimensions.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromBuffer">
      <MemberSignature Language="C#" Value="public static TensorFlow.TFTensor FromBuffer (TensorFlow.TFShape shape, short[] data, int start, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class TensorFlow.TFTensor FromBuffer(class TensorFlow.TFShape shape, int16[] data, int32 start, int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TensorFlow.TFTensor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shape" Type="TensorFlow.TFShape" />
        <Parameter Name="data" Type="System.Int16[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="shape">Represents the tensor shape.</param>
        <param name="data">The linear array of data, the data is shuffled to fit in the tensor with the specified dimensions.</param>
        <param name="start">The offset into the provided data array where the data resides.</param>
        <param name="count">The number of bytes to copy from count into the tensor.</param>
        <summary>
            Creates a new tensor from a portion of an array of shorts
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Use the FromBuffer method to create a tensor that has the specified dimensions
            and is initialized with data from the data array.   The data is copied starting
            at the start offset, for count bytes and is laid out into the tensor following the
            specified dimensions.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromBuffer">
      <MemberSignature Language="C#" Value="public static TensorFlow.TFTensor FromBuffer (TensorFlow.TFShape shape, int[] data, int start, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class TensorFlow.TFTensor FromBuffer(class TensorFlow.TFShape shape, int32[] data, int32 start, int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TensorFlow.TFTensor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shape" Type="TensorFlow.TFShape" />
        <Parameter Name="data" Type="System.Int32[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="shape">Represents the tensor shape.</param>
        <param name="data">The linear array of data, the data is shuffled to fit in the tensor with the specified dimensions.</param>
        <param name="start">The offset into the provided data array where the data resides.</param>
        <param name="count">The number of bytes to copy from count into the tensor.</param>
        <summary>
            Creates a new tensor from a portion of an array of ints
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Use the FromBuffer method to create a tensor that has the specified dimensions
            and is initialized with data from the data array.   The data is copied starting
            at the start offset, for count bytes and is laid out into the tensor following the
            specified dimensions.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromBuffer">
      <MemberSignature Language="C#" Value="public static TensorFlow.TFTensor FromBuffer (TensorFlow.TFShape shape, long[] data, int start, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class TensorFlow.TFTensor FromBuffer(class TensorFlow.TFShape shape, int64[] data, int32 start, int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TensorFlow.TFTensor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shape" Type="TensorFlow.TFShape" />
        <Parameter Name="data" Type="System.Int64[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="shape">Represents the tensor shape.</param>
        <param name="data">The linear array of data, the data is shuffled to fit in the tensor with the specified dimensions.</param>
        <param name="start">The offset into the provided data array where the data resides.</param>
        <param name="count">The number of bytes to copy from count into the tensor.</param>
        <summary>
            Creates a new tensor from a portion of an array of longs
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Use the FromBuffer method to create a tensor that has the specified dimensions
            and is initialized with data from the data array.   The data is copied starting
            at the start offset, for count bytes and is laid out into the tensor following the
            specified dimensions.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromBuffer">
      <MemberSignature Language="C#" Value="public static TensorFlow.TFTensor FromBuffer (TensorFlow.TFShape shape, System.Numerics.Complex[] data, int start, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class TensorFlow.TFTensor FromBuffer(class TensorFlow.TFShape shape, valuetype System.Numerics.Complex[] data, int32 start, int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TensorFlow.TFTensor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shape" Type="TensorFlow.TFShape" />
        <Parameter Name="data" Type="System.Numerics.Complex[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="shape">Represents the tensor shape.</param>
        <param name="data">The linear array of data, the data is shuffled to fit in the tensor with the specified dimensions.</param>
        <param name="start">The offset into the provided data array where the data resides.</param>
        <param name="count">The number of bytes to copy from count into the tensor.</param>
        <summary>
            Creates a new tensor from a portion of an array of Complex numbers
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Use the FromBuffer method to create a tensor that has the specified dimensions
            and is initialized with data from the data array.   The data is copied starting
            at the start offset, for count bytes and is laid out into the tensor following the
            specified dimensions.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromBuffer">
      <MemberSignature Language="C#" Value="public static TensorFlow.TFTensor FromBuffer (TensorFlow.TFShape shape, sbyte[] data, int start, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class TensorFlow.TFTensor FromBuffer(class TensorFlow.TFShape shape, int8[] data, int32 start, int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TensorFlow.TFTensor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shape" Type="TensorFlow.TFShape" />
        <Parameter Name="data" Type="System.SByte[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="shape">Represents the tensor shape.</param>
        <param name="data">The linear array of data, the data is shuffled to fit in the tensor with the specified dimensions.</param>
        <param name="start">The offset into the provided data array where the data resides.</param>
        <param name="count">The number of bytes to copy from count into the tensor.</param>
        <summary>
            Creates a new tensor from a portion of an array of sbytes
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Use the FromBuffer method to create a tensor that has the specified dimensions
            and is initialized with data from the data array.   The data is copied starting
            at the start offset, for count bytes and is laid out into the tensor following the
            specified dimensions.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromBuffer">
      <MemberSignature Language="C#" Value="public static TensorFlow.TFTensor FromBuffer (TensorFlow.TFShape shape, float[] data, int start, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class TensorFlow.TFTensor FromBuffer(class TensorFlow.TFShape shape, float32[] data, int32 start, int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TensorFlow.TFTensor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shape" Type="TensorFlow.TFShape" />
        <Parameter Name="data" Type="System.Single[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="shape">Represents the tensor shape.</param>
        <param name="data">The linear array of data, the data is shuffled to fit in the tensor with the specified dimensions.</param>
        <param name="start">The offset into the provided data array where the data resides.</param>
        <param name="count">The number of bytes to copy from count into the tensor.</param>
        <summary>
            Creates a new tensor from a portion of an array of floats
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Use the FromBuffer method to create a tensor that has the specified dimensions
            and is initialized with data from the data array.   The data is copied starting
            at the start offset, for count bytes and is laid out into the tensor following the
            specified dimensions.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromBuffer">
      <MemberSignature Language="C#" Value="public static TensorFlow.TFTensor FromBuffer (TensorFlow.TFShape shape, ushort[] data, int start, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class TensorFlow.TFTensor FromBuffer(class TensorFlow.TFShape shape, unsigned int16[] data, int32 start, int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TensorFlow.TFTensor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shape" Type="TensorFlow.TFShape" />
        <Parameter Name="data" Type="System.UInt16[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="shape">Represents the tensor shape.</param>
        <param name="data">The linear array of data, the data is shuffled to fit in the tensor with the specified dimensions.</param>
        <param name="start">The offset into the provided data array where the data resides.</param>
        <param name="count">The number of bytes to copy from count into the tensor.</param>
        <summary>
            Creates a new tensor from a portion of an array of ushorts
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Use the FromBuffer method to create a tensor that has the specified dimensions
            and is initialized with data from the data array.   The data is copied starting
            at the start offset, for count bytes and is laid out into the tensor following the
            specified dimensions.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTensorDimension">
      <MemberSignature Language="C#" Value="public long GetTensorDimension (int dimIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 GetTensorDimension(int32 dimIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dimIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dimIndex">Dimension that you are querying.</param>
        <summary>
            Returns the number of elements on a specific dimension in the tensor.
            </summary>
        <returns>The tensor dimension.</returns>
        <remarks>
            If you have a tensor of 3 elements by 5, represented by [3 5],
            the GetTensorDimension(0) will return 3, the GetTensorDimension(1)
            will return 5.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (bool jagged = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(bool jagged) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jagged" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="jagged">
            The default is set to false, which returns .NET multi-dimensional arrays for multi-dimensional
            tensors.    This is useful to feed the data back as a TFTensor created from an array.   Set to
            true if you want to get arrays pointing to arrays, which are slightly more convenient to work
            with from C#
            </param>
        <summary>
            Returns the value of the Tensor as a C# type if possible, or null if the data type can not be represented in C#
            </summary>
        <returns>The value encodes the contents of the tensor, and could include simple values, arrays and multi-dimensional values.</returns>
        <remarks>
            Jagged arrays create various intermediate arrays, while multi-dimensional arrays are more
            efficient memory-wise.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumDims">
      <MemberSignature Language="C#" Value="public int NumDims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumDims" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the number of dimensions in the tensor.
            </summary>
        <value>To be added.</value>
        <remarks>
            For single-dimension tensors the return is 1, 2 dimensions is 2 and so on.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static TensorFlow.TFTensor op_Implicit (Array array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class TensorFlow.TFTensor op_Implicit(class System.Array array) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TensorFlow.TFTensor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
      </Parameters>
      <Docs>
        <param name="array">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static TensorFlow.TFTensor op_Implicit (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class TensorFlow.TFTensor op_Implicit(unsigned int8 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TensorFlow.TFTensor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static TensorFlow.TFTensor op_Implicit (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class TensorFlow.TFTensor op_Implicit(float64 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TensorFlow.TFTensor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static TensorFlow.TFTensor op_Implicit (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class TensorFlow.TFTensor op_Implicit(int32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TensorFlow.TFTensor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static TensorFlow.TFTensor op_Implicit (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class TensorFlow.TFTensor op_Implicit(int64 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TensorFlow.TFTensor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static TensorFlow.TFTensor op_Implicit (System.Numerics.Complex value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class TensorFlow.TFTensor op_Implicit(valuetype System.Numerics.Complex value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TensorFlow.TFTensor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Complex" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static TensorFlow.TFTensor op_Implicit (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class TensorFlow.TFTensor op_Implicit(float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TensorFlow.TFTensor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shape">
      <MemberSignature Language="C#" Value="public long[] Shape { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64[] Shape" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the tensor shape, this is an array whose size determines the number of dimensions on the tensor, and each element is the size of the dimension
            </summary>
        <value>To be added.</value>
        <remarks>
                An array of size 0 is used for constants, an array of size 1 is used
                for single-dimension arrays, where the dimension is the value of the
                first element.   And so on.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="TensorByteSize">
      <MemberSignature Language="C#" Value="public UIntPtr TensorByteSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native unsigned int TensorByteSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UIntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TensorType">
      <MemberSignature Language="C#" Value="public TensorFlow.TFDataType TensorType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype TensorFlow.TFDataType TensorType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TensorFlow.TFDataType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.6313.39838</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
